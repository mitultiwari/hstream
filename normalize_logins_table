#!/usr/bin/zsh
sql() {
  echo $* |sqlite3 db/development.sqlite3
}

echo "Preprocessing"
sql "delete from logins where email='';" # These wouldn't make it through the migration.
# This will break some existing sessions.

echo "Here's what's in the login table at the start"
sql "select id,email from logins;"
echo

echo "Creating missing rows in emails table"
logins=`sql "select email from logins;"`
for email in `echo $logins`
do
  if [ ! `sql "select id from emails where email='$email';"` ]
  then
    sql "insert into emails(email) values('$email');"
  fi
done

echo "Saving mapping from logins to emails"
sql "select emails.id,logins.id from logins,emails where logins.email=emails.email;" > x.emails

echo "Backing up old logins table"
sql "alter table logins rename to logins_old;"

echo "Creating new logins table with email_id instead of email"
sql "create table logins(\"id\" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, \"email_id\" integer, \"shortlist\" text DEFAULT '', \"created_at\" datetime, \"updated_at\" datetime);"
sql "insert into logins select id, 0, shortlist, created_at, updated_at from logins_old;"

echo "Populating email_id in logins table"
for row in `cat x.emails`
do
  email_id=`echo $row |perl -pwe 's/\|/ /g' |column 1`
  login_id=`echo $row |perl -pwe 's/\|/ /g' |column 2`
  sql "update logins set email_id=$email_id where id=$login_id;"
done

echo
echo "Final logins table:"
sql "select logins.id, emails.email from logins, emails where logins.email_id=emails.id;"

rm x.emails
